# Automated Dependency Updates
# Automatically creates PRs for dependency updates using Dependabot-like functionality

name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of updates to check'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - security
          - major
          - minor
          - patch

env:
  NODE_VERSION: '18.x'

jobs:
  check-updates:
    runs-on: ubuntu-latest
    name: Check for Dependency Updates
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: üì¶ Install npm-check-updates
      run: npm install -g npm-check-updates
    
    - name: üîç Check for outdated packages
      run: |
        echo "Checking for outdated packages..."
        ncu --format json > outdated-packages.json || true
        ncu
    
    - name: üìä Generate update report
      run: |
        echo "Generating dependency update report..."
        cat > update-report.md << 'EOF'
        # Dependency Update Report
        
        Generated on: $(date)
        
        ## Outdated Packages
        
        EOF
        
        if [ -f outdated-packages.json ] && [ -s outdated-packages.json ]; then
          echo "The following packages have updates available:" >> update-report.md
          echo "" >> update-report.md
          node -e "const data = require('./outdated-packages.json'); Object.entries(data).forEach(([pkg, version]) => console.log('- **' + pkg + '**: ' + version))" >> update-report.md
        else
          echo "‚úÖ All packages are up to date!" >> update-report.md
        fi
    
    - name: üõ°Ô∏è Check for security updates
      run: |
        echo "Checking for security vulnerabilities..."
        npm audit --audit-level moderate --json > security-report.json || true
        
        if [ -s security-report.json ]; then
          echo "" >> update-report.md
          echo "## Security Vulnerabilities" >> update-report.md
          echo "" >> update-report.md
          
          vulnerabilities=$(node -e "const data = require('./security-report.json'); console.log(data.metadata?.vulnerabilities?.total || 0)")
          if [ "$vulnerabilities" -gt 0 ]; then
            echo "‚ö†Ô∏è Found $vulnerabilities security vulnerabilities that need attention." >> update-report.md
            echo "Run \`npm audit fix\` to automatically fix some issues." >> update-report.md
          else
            echo "‚úÖ No security vulnerabilities found!" >> update-report.md
          fi
        fi
    
    - name: üì§ Upload reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-reports
        path: |
          outdated-packages.json
          security-report.json
          update-report.md
        retention-days: 30
    
    - name: üîÑ Create update PR for security fixes
      if: github.event_name == 'schedule' || github.event.inputs.update_type == 'security'
      run: |
        # Check if there are security vulnerabilities that can be auto-fixed
        if npm audit fix --dry-run --json | grep -q '"fixed"'; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create a new branch for security updates
          branch_name="security-updates-$(date +%Y%m%d)"
          git checkout -b "$branch_name"
          
          # Apply security fixes
          npm audit fix
          
          # Commit changes if any
          if ! git diff --quiet; then
            git add package*.json
            git commit -m "üîí Security: Auto-fix security vulnerabilities
            
            - Applied automatic security fixes via npm audit fix
            - Generated by GitHub Actions dependency update workflow
            
            Please review the changes before merging."
            
            git push origin "$branch_name"
            
            # Create PR using GitHub CLI if available
            if command -v gh &> /dev/null; then
              gh pr create \
                --title "üîí Security: Automatic dependency security fixes" \
                --body "This PR contains automatic security fixes for vulnerable dependencies.
                
                **Changes:**
                - Applied \`npm audit fix\` to resolve security vulnerabilities
                - Updated package-lock.json with secure versions
                
                **Review Required:**
                Please review the changes and test thoroughly before merging.
                
                Generated by: GitHub Actions Dependency Updates workflow" \
                --label "security,dependencies,automated" \
                --base main
            fi
          fi
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-team:
    runs-on: ubuntu-latest
    needs: check-updates
    if: always()
    name: Notify Team of Updates
    
    steps:
    - name: üì• Download reports
      uses: actions/download-artifact@v3
      with:
        name: dependency-reports
        path: ./reports
    
    - name: üìß Create issue for manual updates
      if: github.event_name == 'schedule'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          try {
            const reportContent = fs.readFileSync('./reports/update-report.md', 'utf8');
            
            // Check if there are any updates needed
            if (reportContent.includes('All packages are up to date!') && 
                reportContent.includes('No security vulnerabilities found!')) {
              console.log('No updates needed, skipping issue creation.');
              return;
            }
            
            const issueTitle = `üì¶ Weekly Dependency Update Report - ${new Date().toISOString().split('T')[0]}`;
            
            const issueBody = `${reportContent}
            
            ---
            
            **Next Steps:**
            1. Review the outdated packages listed above
            2. Test updates in a development environment
            3. Create PRs for major version updates that require manual review
            4. Security updates may have been automatically fixed (check recent PRs)
            
            **Automated Actions:**
            - ‚úÖ Security vulnerabilities with automatic fixes have been applied
            - ‚è≥ Major version updates require manual review
            
            This issue was automatically created by the Dependency Updates workflow.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['dependencies', 'maintenance', 'automated']
            });
            
          } catch (error) {
            console.log('Could not create issue:', error.message);
          }